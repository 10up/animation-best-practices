img {
	background-color: var(--color-brand-grayscale-800);
	border-radius: 0.5rem;
	height: auto;
	max-width: 100%;
}

nav ul {
	display: flex;
	flex-wrap: wrap;
	gap: 1rem;
	list-style: none;
	padding: 0;
}

nav a {
	background-color: var(--color-brand-grayscale-100);
	border-radius: 0.5rem;
	color: var(--color-brand-primary);
	padding: 0.75em 1em;
	text-decoration: none;
}

nav a[aria-current] {
	background-color: var(--color-brand-grayscale-800);
	color: var(--color-brand-white);
}

nav a:not([aria-current]):hover,
nav a:not([aria-current]):focus {
	background-color: var(--color-brand-primary);
	color: var(--color-brand-white);
}

.container {
	margin-left: auto;
	margin-right: auto;
	max-width: 80ch;
	padding: 1em;
}

.overlay {
	align-items: center;
	background-color: var(--color-brand-secondary-900);
	display: flex;
	inset: 0;
	justify-content: center;
	left: 0;
	position: fixed;
	top: 0;

	&::after {
		--width: 2rem;
		--loader-width: 2px;

		animation: spin-clockwise 1s infinite linear;
		aspect-ratio: 1 / 1;
		background-image: conic-gradient(transparent 50%, var(--color-brand-white));
		border-radius: 50%;
		content: "";
		mask-image:
			radial-gradient(
				transparent calc(var(--width) / 2 - var(--loader-width) * 2),
				white calc(var(--width) / 2 - var(--loader-width) * 2)
			);
		width: var(--width);
	}
}

@keyframes spin-clockwise {
	from {
		rotate: 0deg;
	}

	to {
		rotate: 360deg;
	}
}

.transition-navigation {
	opacity: 1;
	transform: translateY(0);
	transition-duration: 500ms;
	transition-property: opacity, transform;
	transition-timing-function: ease;
}

.is-animating .transition-navigation {
	opacity: 0;
	transform: translateY(-200%);
}

.is-rendering .transition-navigation {
	transition-delay: 1.5s;
}

.transition-content {
	opacity: 1;
	transition-duration: 500ms;
	transition-property: opacity;
	transition-timing-function: ease;
}

.is-animating .transition-content {
	opacity: 0;
}

.is-rendering .transition-content {
	transition-delay: 1.5s;
}

.transition-overlay {
	opacity: 0;
	transform: translateX(-100%);
	transition-duration: 500ms;
	transition-property: transform;
	transition-timing-function: linear;
}

.is-changing .transition-overlay {
	opacity: 1;
}

/* Page In */
.is-animating .transition-overlay {
	transform: translateX(0%);
	transition-delay: 500ms;
}

/* Page Out */
.is-rendering .transition-overlay {
	transform: translateX(100%);
	transition-delay: 1s;
}
